<?php
// $Id: module_grants.install,v 1.3 2009/07/02 05:54:17 rdeboer Exp $

/**
 * @file
 * Install and uninstall hooks for Module Grants module
 */

/**
 * Implementation of hook_install().
 */
function module_grants_install() {
  if (!module_exists('smart_tabs')) {
    _set_default_permissions();
  }
}

/**
 * Implementation of hook_uninstall().
 */
function module_grants_uninstall() {
  variable_del('module_grants_lenient');
  variable_del('module_grants_OR_modules');
  //@TODO remove module_grants perms from all roles?
}

function _set_default_permissions() {
  // Add minimum suitable defaults, so that authenticated users don't get the
  // message "You are not authorized to access this page". This ties in with
  // the fact that every row of local tasks must have a default set.
  $authenticated_user = db_fetch_object(db_query("SELECT p.rid, perm FROM {permission} p INNER JOIN {role} r ON p.rid=r.rid WHERE r.name='authenticated user'"));
  if ($authenticated_user) {
    $added_perm = $authenticated_user->perm;
    if (strpos($authenticated_user->perm, "access 'I last modified' tab") === FALSE) {
      $added_perm .= ", access 'I last modified' tab"; // @TODO use const
    }
    if (strpos($authenticated_user->perm, "access 'Published' tab") === FALSE) {
      $added_perm .= ", access 'Published' tab"; // @TODO use const
    }
    if ($added_perm != $authenticated_user->perm) {
      db_query("UPDATE {permission} SET perm='%s' WHERE rid=%d", $added_perm, $authenticated_user->rid);
    }
  }
}